{"version":3,"file":"static/js/267.9c03bfc7.chunk.js","mappings":"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","sources":["App/hooks.ts","Hooks/useSpotifyWebApi.tsx","constants/envVars.ts","components/MusicCard/index.tsx","components/NewReleases/index.tsx","../node_modules/@chakra-ui/image/dist/chakra-ui-image.esm.js"],"sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport {RootState, AppDispatch } from './store'\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\n\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport SpotifyWebApi from \"spotify-web-api-node\";\r\nimport { useAppDispatch, useAppSelector } from \"../App/hooks\";\r\nimport { SPOTIFY_CLIENT_ID, SPOTIFY_CLIENT_SECRET } from \"../constants/envVars\";\r\nimport { setSpotifyWebApi } from \"../features/spotifyWebApi/spotifyWebApiSlice\";\r\n\r\nconst useSpotifyWebApi = ():SpotifyWebApi  => {\r\n\r\n  const spotifyApi = new SpotifyWebApi({\r\n    clientId: SPOTIFY_CLIENT_ID,\r\n    clientSecret: SPOTIFY_CLIENT_SECRET,\r\n  })\r\n\r\n  const localTokens: any = localStorage.getItem(\"tokens\");\r\n  const _localTokens = JSON.parse(localTokens)\r\n\r\n\r\n  const localAccessToken = _localTokens?.access_token;\r\n  const localRefreshToken = _localTokens?.refresh_token;\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !!_localTokens === false\r\n    ){\r\n     navigate(\"/auth\");\r\n    }\r\n    spotifyApi.setAccessToken(localAccessToken);\r\n    spotifyApi.setRefreshToken(localRefreshToken);\r\n    dispatch(setSpotifyWebApi(spotifyApi));\r\n  }, []);\r\n\r\n  return spotifyApi;\r\n};\r\n\r\nexport default useSpotifyWebApi;\r\n","export const SPOTIFY_CLIENT_ID = process.env.REACT_APP_SPOTIFY_CLIENT_ID;\r\nexport const SPOTIFY_CLIENT_SECRET =\r\n  process.env.REACT_APP_SPOTIFY_CLIENT_SECRET;\r\nexport const SPOTIFY_REDIRECT_URL = process.env.REACT_APP_SPOTIFY_REDIRECT_URL;\r\n","import {\r\n  Box,\r\n  Center,\r\n  useColorModeValue,\r\n  Text,\r\n  Stack,\r\n  Image,\r\n} from \"@chakra-ui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useAppSelector } from \"../../App/hooks\";\r\n\r\nconst MusicCard = ({ ...props }: any) => {\r\n  const {\r\n    spotifyWebApi: { setSpotifyWebApi: spotifyApi },\r\n    userLibrary,\r\n    newReleases,\r\n  } = useAppSelector((state) => state);\r\n\r\n  const [text, setText] = useState<string>();\r\n\r\n\r\n  const onAddClick = () =>\r\n    spotifyApi\r\n      .addToMySavedAlbums([props?.id])\r\n      .then(function (data) {\r\n        // console.log(\"Added album! =>\", data);\r\n      })\r\n      .catch((err) =>{ /* console.log(err) */});\r\n\r\n  return (\r\n    <Center py={12}>\r\n      <Box\r\n        role={\"group\"}\r\n        p={6}\r\n        maxW={\"230px\"}\r\n        w={\"full\"}\r\n        bg={useColorModeValue(\"white\", \"gray.800\")}\r\n        boxShadow={\"2xl\"}\r\n        rounded={\"lg\"}\r\n        pos={\"relative\"}\r\n        zIndex={1}\r\n      >\r\n        <Box\r\n          rounded={\"lg\"}\r\n          mt={-12}\r\n          pos={\"relative\"}\r\n          height={\"110px\"}\r\n          _after={{\r\n            transition: \"all .3s ease\",\r\n            content: '\"\"',\r\n            w: \"full\",\r\n            h: \"full\",\r\n            pos: \"absolute\",\r\n            top: 5,\r\n            left: 0,\r\n            backgroundImage: `url(${props.images[1].url})`,\r\n            filter: \"blur(15px)\",\r\n            zIndex: -1,\r\n          }}\r\n          _groupHover={{\r\n            _after: {\r\n              filter: \"blur(20px)\",\r\n            },\r\n          }}\r\n        >\r\n          <Image\r\n            rounded={\"lg\"}\r\n            height={130}\r\n            width={182}\r\n            objectFit={\"cover\"}\r\n            src={props.images[1].url}\r\n          />\r\n        </Box>\r\n        <Stack pt={10} align={\"center\"}>\r\n          <Text color={\"gray.500\"} fontSize={\"sm\"} textTransform={\"uppercase\"}>\r\n            {props.name}\r\n          </Text>\r\n          <Stack direction={\"row\"} align={\"center\"}>\r\n            <Text color={\"gray.600\"} as={\"button\"} onClick={() => onAddClick()}>\r\n              {text}\r\n            </Text>\r\n          </Stack>\r\n        </Stack>\r\n      </Box>\r\n    </Center>\r\n  );\r\n};\r\n\r\nexport default MusicCard;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Box, chakra, SimpleGrid } from \"@chakra-ui/react\";\r\nimport useSpotifyWebApi from \"../../Hooks/useSpotifyWebApi\";\r\nimport MusicCard from \"../MusicCard\";\r\nimport { useAppDispatch, useAppSelector } from \"../../App/hooks\";\r\nimport { setReleases } from \"../../features/newReleases/newReleasesSlice\";\r\nimport { setUserLibrary } from \"../../features/userLibrary/userLibrarySlice\";\r\nimport { isEqual } from \"lodash\";\r\n\r\ninterface Props {\r\n  limit: number;\r\n}\r\n\r\nconst NewReleases = ({ limit }: Props) => {\r\n  const spotifyApi = useSpotifyWebApi();\r\n  const dispatch = useAppDispatch();\r\n\r\n  const { newReleases, userLibrary } = useAppSelector((state) => state);\r\n\r\n  useEffect(() => {\r\n    spotifyApi\r\n      .getNewReleases({ limit })\r\n      .then((data) => {\r\n/*         console.log(data);\r\n */        dispatch(setReleases(data.body.albums.items));\r\n        spotifyApi.getMySavedAlbums().then(\r\n          function (userLibData) {\r\n            // Output items\r\n            dispatch(setUserLibrary([...userLibData.body.items]));\r\n          },\r\n          function (err) {\r\n/*             console.log(\"Something went wrong!\", err);\r\n */          }\r\n        );\r\n      })\r\n      .catch((error) => {/* console.log(error) */});\r\n\r\n    return;\r\n  }, []);\r\n\r\n  return (\r\n    <Box maxW=\"7xl\" mx={\"auto\"} pt={5} px={{ base: 2, sm: 5, md: 17 }}>\r\n      <chakra.h1\r\n        textAlign={\"start\"}\r\n        fontSize={\"2xl\"}\r\n        py={5}\r\n        fontWeight={\"bold\"}\r\n      >\r\n        New Releases\r\n      </chakra.h1>\r\n      <SimpleGrid\r\n        columns={{ base: 1, sm: 2, md: 3, lg: 4 }}\r\n        spacing={{ base: 5, lg: 8 }}\r\n      >\r\n        {newReleases.map((item, index) => (\r\n          <MusicCard key={index} {...item} />\r\n        ))}\r\n      </SimpleGrid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default NewReleases;\r\n","import { forwardRef, chakra } from '@chakra-ui/system';\nimport { omit, __DEV__ } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport { useState, useEffect, useRef, useCallback } from 'react';\nimport { useSafeLayoutEffect } from '@chakra-ui/hooks';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\n/**\n * React hook that loads an image in the browser,\n * and lets us know the `status` so we can show image\n * fallback if it is still `pending`\n *\n * @returns the status of the image loading progress\n *\n * @example\n *\n * ```jsx\n * function App(){\n *   const status = useImage({ src: \"image.png\" })\n *   return status === \"loaded\" ? <img src=\"image.png\" /> : <Placeholder />\n * }\n * ```\n */\nfunction useImage(props) {\n  var loading = props.loading,\n      src = props.src,\n      srcSet = props.srcSet,\n      onLoad = props.onLoad,\n      onError = props.onError,\n      crossOrigin = props.crossOrigin,\n      sizes = props.sizes,\n      ignoreFallback = props.ignoreFallback;\n\n  var _useState = useState(\"pending\"),\n      status = _useState[0],\n      setStatus = _useState[1];\n\n  useEffect(function () {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  var imageRef = useRef();\n  var load = useCallback(function () {\n    if (!src) return;\n    flush();\n    var img = new Image();\n    img.src = src;\n    if (crossOrigin) img.crossOrigin = crossOrigin;\n    if (srcSet) img.srcset = srcSet;\n    if (sizes) img.sizes = sizes;\n    if (loading) img.loading = loading;\n\n    img.onload = function (event) {\n      flush();\n      setStatus(\"loaded\");\n      onLoad == null ? void 0 : onLoad(event);\n    };\n\n    img.onerror = function (error) {\n      flush();\n      setStatus(\"failed\");\n      onError == null ? void 0 : onError(error);\n    };\n\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n\n  var flush = function flush() {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n\n  useSafeLayoutEffect(function () {\n    /**\n     * If user opts out of the fallback/placeholder\n     * logic, let's bail out.\n     */\n    if (ignoreFallback) return undefined;\n\n    if (status === \"loading\") {\n      load();\n    }\n\n    return function () {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  /**\n   * If user opts out of the fallback/placeholder\n   * logic, let's just return 'loaded'\n   */\n\n  return ignoreFallback ? \"loaded\" : status;\n}\nvar shouldShowFallbackImage = function shouldShowFallbackImage(status, fallbackStrategy) {\n  return status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\" || status === \"failed\" && fallbackStrategy === \"onError\";\n};\n\nvar _excluded = [\"htmlWidth\", \"htmlHeight\", \"alt\"],\n    _excluded2 = [\"fallbackSrc\", \"fallback\", \"src\", \"srcSet\", \"align\", \"fit\", \"loading\", \"ignoreFallback\", \"crossOrigin\", \"fallbackStrategy\", \"referrerPolicy\"];\nvar NativeImage = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var htmlWidth = props.htmlWidth,\n      htmlHeight = props.htmlHeight,\n      alt = props.alt,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"img\", _extends({\n    width: htmlWidth,\n    height: htmlHeight,\n    ref: ref,\n    alt: alt\n  }, rest));\n});\n\n/**\n * React component that renders an image with support\n * for fallbacks\n *\n * @see Docs https://chakra-ui.com/image\n */\nvar Image$1 = /*#__PURE__*/forwardRef(function (props, ref) {\n  var fallbackSrc = props.fallbackSrc,\n      fallback = props.fallback,\n      src = props.src,\n      srcSet = props.srcSet,\n      align = props.align,\n      fit = props.fit,\n      loading = props.loading,\n      ignoreFallback = props.ignoreFallback,\n      crossOrigin = props.crossOrigin,\n      _props$fallbackStrate = props.fallbackStrategy,\n      fallbackStrategy = _props$fallbackStrate === void 0 ? \"beforeLoadOrError\" : _props$fallbackStrate,\n      referrerPolicy = props.referrerPolicy,\n      rest = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  var providedFallback = fallbackSrc !== undefined || fallback !== undefined;\n  /**\n   * Defer to native `img` tag if `loading` prop is passed\n   * @see https://github.com/chakra-ui/chakra-ui/issues/1027\n   *\n   * shouldIgnoreFallbackImage determines if we have the possibility to render a fallback image\n   */\n\n  var shouldIgnoreFallbackImage = loading != null || // use can opt out of fallback image\n  ignoreFallback || // if the user doesn't provide any kind of fallback we should ignore it\n  !providedFallback;\n  /**\n   * returns `loaded` if fallback is ignored\n   */\n\n  var status = useImage(_extends({}, props, {\n    ignoreFallback: shouldIgnoreFallbackImage\n  }));\n  var showFallbackImage = shouldShowFallbackImage(status, fallbackStrategy);\n\n  var shared = _extends({\n    ref: ref,\n    objectFit: fit,\n    objectPosition: align\n  }, shouldIgnoreFallbackImage ? rest : omit(rest, [\"onError\", \"onLoad\"]));\n\n  if (showFallbackImage) {\n    /**\n     * If user passed a custom fallback component,\n     * let's render it here.\n     */\n    if (fallback) return fallback;\n    return /*#__PURE__*/React.createElement(chakra.img, _extends({\n      as: NativeImage,\n      className: \"chakra-image__placeholder\",\n      src: fallbackSrc\n    }, shared));\n  }\n\n  return /*#__PURE__*/React.createElement(chakra.img, _extends({\n    as: NativeImage,\n    src: src,\n    srcSet: srcSet,\n    crossOrigin: crossOrigin,\n    loading: loading,\n    referrerPolicy: referrerPolicy,\n    className: \"chakra-image\"\n  }, shared));\n});\n\n/**\n * Fallback component for most SSR users who want to use the native `img` with\n * support for chakra props\n */\nvar Img = /*#__PURE__*/forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(chakra.img, _extends({\n    ref: ref,\n    as: NativeImage,\n    className: \"chakra-image\"\n  }, props));\n});\n\nif (__DEV__) {\n  Image$1.displayName = \"Image\";\n}\n\nexport { Image$1 as Image, Img, shouldShowFallbackImage, useImage };\n"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","spotifyApi","SpotifyWebApi","clientId","process","clientSecret","localTokens","localStorage","getItem","_localTokens","JSON","parse","localAccessToken","access_token","localRefreshToken","refresh_token","navigate","useNavigate","dispatch","useEffect","setAccessToken","setRefreshToken","setSpotifyWebApi","props","state","spotifyWebApi","userLibrary","newReleases","useState","text","py","role","p","maxW","w","bg","useColorModeValue","boxShadow","rounded","pos","zIndex","mt","height","_after","transition","content","h","top","left","backgroundImage","images","url","filter","_groupHover","width","objectFit","src","pt","align","color","fontSize","textTransform","name","direction","as","onClick","addToMySavedAlbums","id","then","data","catch","err","limit","useSpotifyWebApi","getNewReleases","setReleases","body","albums","items","getMySavedAlbums","userLibData","setUserLibrary","error","mx","px","base","sm","md","textAlign","fontWeight","columns","lg","spacing","map","item","index","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","useImage","loading","srcSet","onLoad","onError","crossOrigin","sizes","ignoreFallback","_useState","status","setStatus","imageRef","useRef","load","useCallback","flush","img","Image","srcset","onload","event","onerror","current","useSafeLayoutEffect","_excluded","_excluded2","NativeImage","React","ref","htmlWidth","htmlHeight","alt","rest","Image$1","forwardRef","fallbackSrc","fallback","fit","_props$fallbackStrate","fallbackStrategy","referrerPolicy","shouldIgnoreFallbackImage","undefined","showFallbackImage","shouldShowFallbackImage","shared","objectPosition","omit","chakra","className","__DEV__","displayName"],"sourceRoot":""}